apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.myvocab.myvocab"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 5
        versionName "1.0.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        testOptions.unitTests.includeAndroidResources = true

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }

    }
    buildTypes {

        def GOOGLE_API_BASE_URL = "GOOGLE_API_BASE_URL"
        def GOOGLE_API_KEY = "GOOGLE_API_KEY"

        def YANDEX_TRANSLATE_API_BASE_URL = "YANDEX_TRANSLATE_API_BASE_URL"
        def YANDEX_TRANSLATE_API_KEY = "YANDEX_TRANSLATE_API_KEY"

        def YANDEX_DICTIONARY_API_BASE_URL = "YANDEX_DICTIONARY_API_BASE_URL"
        def YANDEX_DICTIONARY_API_KEY = "YANDEX_DICTIONARY_API_KEY"

        def USE_LEAK_CANARY = "USE_LEAK_CANARY"

        def EXACT_REMINDING = "EXACT_REMINDING"

        buildTypes.each {
            it.buildConfigField "String", GOOGLE_API_BASE_URL, "\"https://translation.googleapis.com\""
            it.buildConfigField "String", GOOGLE_API_KEY, GoogleAPIKey

            it.buildConfigField "String", YANDEX_TRANSLATE_API_BASE_URL, "\"https://translate.yandex.net\""
            it.buildConfigField "String", YANDEX_TRANSLATE_API_KEY, YandexTranslateAPIKey

            it.buildConfigField "String", YANDEX_DICTIONARY_API_BASE_URL, "\"https://dictionary.yandex.net\""
            it.buildConfigField "String", YANDEX_DICTIONARY_API_KEY, YandexDictionaryAPIKey
        }

        debug {
            ext.alwaysUpdateBuildId = false
            manifestPlaceholders = [enableCrashReporting : "false"]
            buildConfigField "Boolean", USE_LEAK_CANARY, "false"
            buildConfigField "Boolean", EXACT_REMINDING, "true"
        }

        release {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting : "true"]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", USE_LEAK_CANARY, "false"
            buildConfigField "Boolean", EXACT_REMINDING, "false"
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Firebase
    implementation 'com.google.firebase:firebase-firestore:21.3.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // RxFirebase
    implementation 'com.github.FrangSierra:RxFirebase:1.5.6'

    // Navigation Components
    def navigation_ver = "1.0.0"
    implementation "android.arch.navigation:navigation-fragment:$navigation_ver"
    implementation "android.arch.navigation:navigation-ui:$navigation_ver"

    // Dagger
    def dagger_ver = '2.25.2'
    implementation "com.google.dagger:dagger:$dagger_ver"
    implementation "com.google.dagger:dagger-android:$dagger_ver"
    implementation "com.google.dagger:dagger-android-support:$dagger_ver"
    implementation 'com.google.android.material:material:1.1.0'
    kapt "com.google.dagger:dagger-compiler:$dagger_ver"
    kapt "com.google.dagger:dagger-android-processor:$dagger_ver"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_ver"

    // Glide
    def glide_ver = '4.10.0'
    implementation "com.github.bumptech.glide:glide:$glide_ver"
    kapt "com.github.bumptech.glide:compiler:$glide_ver"

    def material_ver = "1.2.0-alpha04"
    implementation "com.google.android.material:material:$material_ver"

    // Moshi
    def moshi_ver = "1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_ver"

    // Room
    def room_ver = '2.2.3'
    implementation "androidx.room:room-rxjava2:$room_ver"
    kapt "androidx.room:room-compiler:$room_ver"

    // ViewModel and LiveData
    def lifecycle_ver = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_ver"

    // Retrofit
    def retrofit_ver = '2.6.2'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_ver"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_ver"

    def okhttp_log_interceptor_ver = '4.2.2'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_log_interceptor_ver"

    // RxJava
    def rx_java_ver = '2.2.13'
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_ver"

    // RxAndroid
    def rx_android_ver = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_ver"

    // Rx-Retrofit Call Adapter
    def rx_retrofit_adapter_ver = '2.6.2'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rx_retrofit_adapter_ver"
    // Retrofit call adapter

    // Reactive Streams (convert Observable to LiveData)
    def reactive_streams_ver = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactive_streams_ver"

    // CSV
    def open_csv_ver = "4.6"
    implementation "com.opencsv:opencsv:$open_csv_ver"

    // Timber
    def timber_ver = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timber_ver"

    // Tests
    testImplementation "junit:junit:4.13-rc-1"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test:runner:1.3.0-alpha03"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.mockito:mockito-core:2.19.0"

    // Multidex
    def multidex_ver = '1.0.3'
    implementation "com.android.support:multidex:$multidex_ver"

    // LeakCanary
    def leak_canary_ver = '1.6.3'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_ver"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_ver"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leak_canary_ver"

}
repositories {
    mavenCentral()
}
configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}
apply plugin: 'com.google.gms.google-services'
